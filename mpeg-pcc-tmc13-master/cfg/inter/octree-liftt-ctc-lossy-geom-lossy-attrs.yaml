# Test conditions for N17995 CTC C2 using TMC13 octree
# octree lossy-geom  --  lossy-attrs liftt
---
categories:
  lossy-geom-lossy-attrs:
    encflags:
     - mode: 0

     -
       - !conditional '${src-unit-metres}'
       - srcUnit: metre
       - srcUnitLength: '${src-unit-metres}'
       - outputUnitLength: '${src-unit-metres}'

     ##
     # geometry parameters (octree)
     - trisoupNodeSizeLog2: 0
     - mergeDuplicatedPoints: 1
     - neighbourAvailBoundaryLog2: 8
     - intra_pred_max_node_size_log2: 6
     - positionQuantizationScale:
         r01: '$eval{ $rp = 5; $gp = ${src-geometry-precision}; $p_min = max(gp - 9, 7); $start = min(1, $gp - ($p_min + 6)); $step = max(1, (min($gp - 1, $p_min + 7) - $p_min) / 5); $y = $start + round($rp * $step); $div = 1 << (abs($y) + 1); ((1 - 2*signbit($y)) % $div) / $div }'
         r02: '$eval{ $rp = 4; $gp = ${src-geometry-precision}; $p_min = max(gp - 9, 7); $start = min(1, $gp - ($p_min + 6)); $step = max(1, (min($gp - 1, $p_min + 7) - $p_min) / 5); $y = $start + round($rp * $step); $div = 1 << (abs($y) + 1); ((1 - 2*signbit($y)) % $div) / $div }'
         r03: '$eval{ $rp = 3; $gp = ${src-geometry-precision}; $p_min = max(gp - 9, 7); $start = min(1, $gp - ($p_min + 6)); $step = max(1, (min($gp - 1, $p_min + 7) - $p_min) / 5); $y = $start + round($rp * $step); $div = 1 << (abs($y) + 1); ((1 - 2*signbit($y)) % $div) / $div }'
         r04: '$eval{ $rp = 2; $gp = ${src-geometry-precision}; $p_min = max(gp - 9, 7); $start = min(1, $gp - ($p_min + 6)); $step = max(1, (min($gp - 1, $p_min + 7) - $p_min) / 5); $y = $start + round($rp * $step); $div = 1 << (abs($y) + 1); ((1 - 2*signbit($y)) % $div) / $div }'
         r05: '$eval{ $rp = 1; $gp = ${src-geometry-precision}; $p_min = max(gp - 9, 7); $start = min(1, $gp - ($p_min + 6)); $step = max(1, (min($gp - 1, $p_min + 7) - $p_min) / 5); $y = $start + round($rp * $step); $div = 1 << (abs($y) + 1); ((1 - 2*signbit($y)) % $div) / $div }'
         r06: '$eval{ $rp = 0; $gp = ${src-geometry-precision}; $p_min = max(gp - 9, 7); $start = min(1, $gp - ($p_min + 6)); $step = max(1, (min($gp - 1, $p_min + 7) - $p_min) / 5); $y = $start + round($rp * $step); $div = 1 << (abs($y) + 1); ((1 - 2*signbit($y)) % $div) / $div }'
     -
       - !conditional '"${group}" eq "cat3-frame" && "${src-unit-metres}" eq "0.01"'
       - positionQuantizationScale:
           r01: 0.03125
           r02: 0.0625
           r03: 0.125
           r04: 0.2
           r05: 0.3
           r06: 0.375
     -
       - !conditional '"${src-dir}" =~ m{^cognataQC}'
       - positionQuantizationScale:
           r01: 0.001953125
           r02: 0.00390625
           r03: 0.0078125
           r04: 0.015625
           r05: 0.03125
           r06: 0.125
     - randomAccessPeriod: 32
     - interPredictionEnabled: 1
     - globalMotionEnabled: 1
     - motionVectorPath: '${global_motion_file}'
     -
       - !conditional '${numLasers}'
       - angularEnabled: 1
       - numLasers: '${numLasers}'
       - lasersTheta: '${lasersTheta}'
       - lasersZ: '${lasersZ}'
       - lasersNumPhiPerTurn:  '${lasersNumPhiPerTurn}'
       - planarBufferDisabled: 1
       - zCompensationEnabled: 1

     # default qtbt and planar with cat3-frame exception
     - maxNumQtBtBeforeOt: 4
     - minQtbtSizeLog2: 0
     - planarEnabled: 1
     -
       - !conditional '"${group}" eq "solid"'
       - planarEnabled: '${enablePlanar}'
     -
       - !conditional '"${group}" eq "dense"'
       - planarEnabled: '${enablePlanar}'
     - planarModeIdcmUse: 0
     -
       - !conditional '"${group}" eq "cat3-frame"'
       - partitionMethod: 0
       - maxNumQtBtBeforeOt: 6
       - planarModeIdcmUse: 32
     -
       - !conditional '"${lidar-type}" eq "spinning"'
       # using cuboid LPU with spinning sequences
       - lpuType: 1
     - gmThresholdHistScale: '$eval{ ${gm-thresh-hist-scale} || 100 }'
     - gmThresholdMinZ: '$eval{ ${gm-thresh-min-z} || -4000 }'
     - gmThresholdMaxZ: '$eval{ ${gm-thresh-max-z} || -500 }'
     - gmThresholdLeftScale: '$eval{ ${gm-thresh-left-scale} || 1.5 }'
     - gmThresholdRightScale: '$eval{ ${gm-thresh-right-scale} || 1.5 }'

     ####
     # attribute coding (common options -- relies on option ordering)
     #  - scale 16bit reflectance data to 8bit
     #  - use lifting transform for lossy conditions
     -
       - convertPlyColourspace: 1
       - transformType: 2
       - numberOfNearestNeighborsInPrediction: 3
       - levelOfDetailCount: '$eval{ ${seq_lod} || 12 }'
       - lodDecimator: 0
       -
         - !conditional '"${group}" =~ m{^cat3}'
         - lodDecimator: 1
         - lod_neigh_bias: ${seq_lod_bias}
       -
         - !conditional '"${group}" eq "cat3-fused"'
         - lodDecimator: 2
       -
         - !conditional '${numLasers}'
         - lod_neigh_bias: '1,1,1'
         - spherical_coord_flag: 1
       -
         - !conditional '"${lidar-type}" eq "non-spinning"'
         - attributeInterPredictionEnabled: 0

       ##
       # attribute coding -- reflectance
       -
         - !conditional '${has_refl}'
         - adaptivePredictionThreshold: 64
         - qp:
             r01: 51
             r02: 46
             r03: 40
             r04: 34
             r05: 28
             r06: 22
         - bitdepth: 8
         -
           - !conditional '${reflectance8b16b_scale_factor}'
           - attrOffset: 0
           - attrScale: ${reflectance8b16b_scale_factor}
         - attribute: reflectance

       ##
       # attribute coding -- colour
       -
         - !conditional '${has_colour}'
         - adaptivePredictionThreshold: 64
         - qp:
             r01: 51
             r02: 46
             r03: 40
             r04: 34
             r05: 28
             r06: 22
         - qpChromaOffset: 0
         - bitdepth: 8
         - attrOffset: 0
         - attrScale: 1
         - attribute: color
     - attrInterPredTranslationThresh: '$eval{ ${translation-thresh} || 1000 }'

    decflags:
     - mode: 1
     -
       - !conditional '${src-unit-metres}'
       - outputUnitLength: '${src-unit-metres}'

     - convertPlyColourspace: 1

    pcerrorflags:
     - dropdups: 2
     - neighborsProc: 1

    sequences:
      # cat3
      ford_01_q1mm:
        # todo(??): it would be nice if the encoder could make this adjustment
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }

      ford_02_q1mm:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }

      ford_03_q1mm:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }

      qnxadas-junction-approach:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }

      qnxadas-junction-exit:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }

      qnxadas-motorway-join:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }

      qnxadas-navigating-bends:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }

      innovizQC1:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }
        translation-thresh: 100
        gm-thresh-hist-scale: 10
        gm-thresh-min-z: -250
        gm-thresh-max-z: 250
        gm-thresh-left-scale: 0.2
        gm-thresh-right-scale: 0.5

      innovizQC2:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }
        translation-thresh: 100
        gm-thresh-hist-scale: 10
        gm-thresh-min-z: -250
        gm-thresh-max-z: 250
        gm-thresh-left-scale: 0.2
        gm-thresh-right-scale: 0.5

      innovizQC3:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }
        translation-thresh: 100
        gm-thresh-hist-scale: 10
        gm-thresh-min-z: -250
        gm-thresh-max-z: 250
        gm-thresh-left-scale: 0.2
        gm-thresh-right-scale: 0.5

      cognataQC1:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }

      cognataQC2:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }

      cognataQC3:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }

      cognataQC4:
        # override dist2 at particular rate points (lossy geometry only)
        seq_lod: { r01: 8, r02: 9 }
