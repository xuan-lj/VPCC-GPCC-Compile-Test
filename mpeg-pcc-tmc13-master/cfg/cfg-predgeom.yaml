---
# the following flags are common to all predgeom configurations
# NB: these are applied after the category config
encflags:
 # Some sequences input order is not characteristic of a real
 # system.  This will make it so.
 - sortInputByAzimuth: '$eval{ ${needs_azimuth_presort} || 0 }'

 # use predictive geometry, default to azimuthal sort
 - geomTreeType: 1
 - predGeomSort: 0

 # configuration for angular predictive geometry
 -
   - !conditional '${numLasers}'
   - predGeomAzimuthSortPrecision: 1024
   - enableGroundPartition: '${enableGroundPartition}'

 -
   - !conditional '"${group}" eq "cat3-fused"'
   - predGeomSort: 4
   - predGeomAzimuthSortPrecision: 0.05

# the following are for specific configurations
categories:
  lossless-geom-lossless-attrs: &predgeomlossless
    encflags:
     # configuration for angular predictive geometry
     -
       - !conditional '${numLasers}'
       - positionAzimuthScaleLog2: 12
       - positionAzimuthSpeed: '$eval{ (${pos_azimuth_speed}) >> 12 - 12 }'
       - attrSphericalMaxLog2: 17
       - resRContextQphiThresholdPresentFlag: 1
       - resRContextQphiThreshold: '$eval{ int (1600 / ((${pos_azimuth_speed}) + 0  >> 12 - 12)) }'

  # these conditions use the same config as earlier
  lossless-geom-lossy-attrs: *predgeomlossless
  lossless-geom-nearlossless-attrs: *predgeomlossless

  lossy-geom-lossy-attrs:
    encflags:
     # configuration for angular predictive geometry
     -
       - !conditional '${numLasers}'
       - positionQuantisationEnabled: 1
       - positionBaseQp: 58
       - positionRadiusInvScaleLog2:
          r06: 1
          r05: 2
          r04: 4
          r03: 5
          r02: 7
          r01: 8
       - positionAzimuthScaleLog2:
          r06: 12
          r05: 11
          r04: 9
          r03: 8
          r02: 7
          r01: 7
       - positionAzimuthSpeed:
          r06: '$eval{ (${pos_azimuth_speed}) + 0  >> 12 - 12 }'
          r05: '$eval{ (${pos_azimuth_speed}) + 1  >> 12 - 11 }'
          r04: '$eval{ (${pos_azimuth_speed}) + 4  >> 12 - 9 }'
          r03: '$eval{ (${pos_azimuth_speed}) + 8  >> 12 - 8 }'
          r02: '$eval{ (${pos_azimuth_speed}) + 16 >> 12 - 7 }'
          r01: '$eval{ (${pos_azimuth_speed}) + 16 >> 12 - 7 }'
       - attrSphericalMaxLog2:
          r06: 17
          r05: 16
          r04: 14
          r03: 13
          r02: 12
          r01: 12
       - resRContextQphiThresholdPresentFlag: 1
       - resRContextQphiThreshold:
          r06: '$eval{ int (1600 / ((${pos_azimuth_speed}) + 0  >> 12 - 12)) }'
          r05: '$eval{ int (1600 / ((${pos_azimuth_speed}) + 1  >> 12 - 11)) }'
          r04: '$eval{ int (1600 / ((${pos_azimuth_speed}) + 4  >> 12 - 9)) }'
          r03: '$eval{ int (1600 / ((${pos_azimuth_speed}) + 8  >> 12 - 8)) }'
          r02: '$eval{ int (1600 / ((${pos_azimuth_speed}) + 16 >> 12 - 7)) }'
          r01: '$eval{ int (1600 / ((${pos_azimuth_speed}) + 16 >> 12 - 7)) }'
     - secondaryResidualDisabled: 1

sequences:
  ford_01_q1mm: { needs_azimuth_presort: 1, pos_azimuth_speed: '(33<<7) - 30', enableGroundPartition: 1}
  ford_02_q1mm: { needs_azimuth_presort: 1, pos_azimuth_speed: '(33<<7) - 30', enableGroundPartition: 1}
  ford_03_q1mm: { needs_azimuth_presort: 1, pos_azimuth_speed: '(33<<7) - 30', enableGroundPartition: 1}
  qnxadas-junction-approach: { needs_azimuth_presort: 1, pos_azimuth_speed: '(364<<7) + 12', enableGroundPartition: 0}
  qnxadas-junction-exit:     { needs_azimuth_presort: 1, pos_azimuth_speed: '(364<<7) + 12', enableGroundPartition: 0}
  qnxadas-motorway-join:     { needs_azimuth_presort: 1, pos_azimuth_speed: '(364<<7) + 12', enableGroundPartition: 0}
  qnxadas-navigating-bends:  { needs_azimuth_presort: 1, pos_azimuth_speed: '(364<<7) + 12', enableGroundPartition: 0}
  cognataQC1:  { needs_azimuth_presort: 1, pos_azimuth_speed: '9648' , inter_azim_scale_log2: '(6 + 7)', enableGroundPartition: 0}
  cognataQC2:  { needs_azimuth_presort: 1, pos_azimuth_speed: '9648' , inter_azim_scale_log2: '(6 + 7)', enableGroundPartition: 0}
  cognataQC3:  { needs_azimuth_presort: 1, pos_azimuth_speed: '9648' , inter_azim_scale_log2: '(6 + 7)', enableGroundPartition: 0}
  cognataQC4:  { needs_azimuth_presort: 1, pos_azimuth_speed: '9648' , inter_azim_scale_log2: '(6 + 7)', enableGroundPartition: 0}  
